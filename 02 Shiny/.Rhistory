print(p)
GO.District
p <- ggplot(data = df) +
geom_histogram(aes(x= Clearance.Status, fill = GO.District), stat = "count") +
labs(title= "Clearance Status Histogram", x="Clearance Status", y="Count", fill="District Location of Arrest")
print(p)
p <- ggplot(data = df) +
geom_histogram(aes(x= Clearance.Status, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Clearance Status Histogram", x="Clearance Status", y="Count", fill="District Location of Arrest")
print(p)
p <- ggplot(data = df) +
geom_boxplot(aes(x= Clearance.Status, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Clearance Status Histogram", x="Clearance Status", y="Count", fill="District Location of Arrest")
print(p)
p <- ggplot(data = df) +
geom_boxplot(aes(x= Clearance.Status, y = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Clearance Status Histogram", x="Clearance Status", y="Count", fill="District Location of Arrest")
print(p)
p <- ggplot(data = df) +
geom_boxplot(aes(x= Clearance.Status, y = Highest.NIBRS.UCR.Offense.Description)) +
labs(title= "Clearance Status Histogram", x="Clearance Status", y="Count", fill="District Location of Arrest")
print(p)
p <- ggplot(data = df) +
geom_boxplot(aes(x= Clearance.Status, y = Highest.NIBRS.UCR.Offense.Description, colour =Clearance.Status )) +
labs(title= "Clearance Status Histogram", x="Clearance Status", y="Count", fill="District Location of Arrest")
print(p)
p <- ggplot(data = df) +
geom_col(aes(x= Clearance.Status, y = Highest.NIBRS.UCR.Offense.Description, colour =Clearance.Status )) +
labs(title= "Clearance Status Histogram", x="Clearance Status", y="Count", fill="District Location of Arrest")
print(p)
p <- ggplot(data = df) +
geom_col(aes(x= Clearance.Status, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Clearance Status Histogram", x="Clearance Status", y="Count", fill="District Location of Arrest")
p <- ggplot(data = df) +
geom_dotplot(aes(x= Clearance.Status, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Clearance Status Histogram", x="Clearance Status", y="Count", fill="District Location of Arrest")
print(p)
p <- ggplot(data = df) +
geom_dotplot(aes(x= GO.District, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Clearance Status Histogram", x="Clearance Status", y="Count", fill="District Location of Arrest")
print(p)
p <- ggplot(data = df) +
geom_histogram(aes(x= GO.District, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Clearance Status Histogram", x="Clearance Status", y="Count", fill="District Location of Arrest")
print(p)
p <- ggplot(data = df) +
geom_histogram(aes(x= GO.District, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Crime Status Reltates to GO District", x="GO Districts", y="Count", fill="Type of Crime")
print(p)
p <- ggplot(data = df) +
geom_histogram(aes(x= GO.Location, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Crime Status Reltates to GO District", x="GO Districts", y="Count", fill="Type of Crime")
print(p)
p <- dyplyr::filter(df, GO.Location == "78705") %>% ggplot() +
geom_histogram(aes(x= GO.Location, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Crime Status Reltates to GO District", x="GO Districts", y="Count", fill="Type of Crime")
require("dplyr")
p <- dyplyr::filter(df, GO.Location == "78705") %>% ggplot() +
geom_histogram(aes(x= GO.Location, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Crime Status Reltates to GO District", x="GO Districts", y="Count", fill="Type of Crime")
p <- dplyr::filter(df, GO.Location == "78705") %>% ggplot() +
geom_histogram(aes(x= GO.Location, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Crime Status Reltates to GO District", x="GO Districts", y="Count", fill="Type of Crime")
require("ggplot2")
require("dplyr")
require("grid")
require("RCurl")
require("jsonlite")
p <- dplyr::filter(df, GO.Location == "78705") %>% ggplot() +
geom_histogram(aes(x= GO.Location, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Crime Status Reltates to GO District", x="GO Districts", y="Count", fill="Type of Crime")
print(p)
p <- dplyr::filter(df, GO.Location == "78705") %>% ggplot() +
geom_histogram(aes(x= GO.District, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Crime Status Reltates to GO District", x="GO Districts", y="Count", fill="Type of Crime")
print(p)
df <- read.csv("/Users/Ron/Desktop/Annual_Crime_Dataset_2015.csv",stringsAsFactors = FALSE)
p <- dplyr::filter(df, GO.Location == "78705") %>% ggplot() +
geom_histogram(aes(x= GO.District, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Crime Status Reltates to GO District", x="GO Districts", y="Count", fill="Type of Crime")
print(p)
summary(df)
p <- ggplot(df) +
geom_histogram(aes(x= GO.District, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Crime Status Reltates to GO District", x="GO Districts", y="Count", fill="Type of Crime")
print(p)
p <- dplyr::filter(df, GO.Location == "78705") %>% ggplot(df) +
geom_histogram(aes(x= GO.District, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Crime Status Reltates to GO District", x="GO Districts", y="Count", fill="Type of Crime")
p <- dplyr::filter(df, GO.Location == "78705") %>% ggplot() +
geom_histogram(aes(x= GO.District, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Crime Status Reltates to GO District", x="GO Districts", y="Count", fill="Type of Crime")
print(p)
p <- dplyr::filter(df, GO.Location == 78705) %>% ggplot() +
geom_histogram(aes(x= GO.District, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Crime Status Reltates to GO District", x="GO Districts", y="Count", fill="Type of Crime")
print(p)
p <- dplyr::filter(df, GO_Location == 78705) %>% ggplot() +
geom_histogram(aes(x= GO.District, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Crime Status Reltates to GO District", x="GO Districts", y="Count", fill="Type of Crime")
print(p)
p <- dplyr::filter(df, Highest.NIBRS.UCR.Offense.Description == "Theft") %>% ggplot() +
geom_histogram(aes(x= GO.District, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Crime Status Reltates to GO District", x="GO Districts", y="Count", fill="Type of Crime")
print(p)
p <- dplyr::filter(df, GO.District == "E") %>% ggplot() +
geom_histogram(aes(x= GO.District, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Crime Status Reltates to GO District", x="GO Districts", y="Count", fill="Type of Crime")
print(p)
p <- dplyr::filter(df, GO.District == 78705) %>% ggplot() +
geom_histogram(aes(x= GO.District, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Crime Status Reltates to GO District", x="GO Districts", y="Count", fill="Type of Crime")
print(p)
p <- dplyr::filter(df, GO.Location == int(78705)) %>% ggplot() +
geom_histogram(aes(x= GO.District, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Crime Status Reltates to GO District", x="GO Districts", y="Count", fill="Type of Crime")
print(p)
p <- dplyr::filter(df, GO.Location == 78705) %>% ggplot() +
geom_histogram(aes(x= GO.District, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Crime Status Reltates to GO District", x="GO Districts", y="Count", fill="Type of Crime")
print(p)
p <- dplyr::filter(df, GO.Location == '78705') %>% ggplot() +
geom_histogram(aes(x= GO.District, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Crime Status Reltates to GO District", x="GO Districts", y="Count", fill="Type of Crime")
print(p)
p <- dplyr::filter(df, GO.Location == '78753') %>% ggplot() +
geom_histogram(aes(x= GO.District, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Crime Status Reltates to GO District", x="GO Districts", y="Count", fill="Type of Crime")
print(p)
df.GO.Location
GO.Location
df.GO.Location()
df$GO.Location
p <- dplyr::filter(df, GO.Location.Zip == "78705") %>% ggplot() +
geom_histogram(aes(x= GO.District, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Crime Status Reltates to GO District", x="GO Districts", y="Count", fill="Type of Crime")
print(p)
p <- dplyr::filter(df, GO.Location.Zip == "78705") %>% ggplot() +
geom_histogram(aes(x= GO.District, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Crime Status Reltates to GO District", x="Location Zip", y="Count", fill="Type of Crime")
print(p)
p <- dplyr::filter(df, GO.Location.Zip == "78705") %>% ggplot() +
geom_histogram(aes(x= GO.Location.Zip, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Crime Status Reltates to GO District", x="Location Zip", y="Count", fill="Type of Crime")
print(p)
p <- dplyr::filter(df, GO.Location.Zip == "78705" | GO.Location.Zip == "78701") %>% ggplot() +
geom_histogram(aes(x= GO.Location.Zip, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Crime Status Reltates to GO District", x="Location Zip", y="Count", fill="Type of Crime")
print(p)
p <- dplyr::filter(df, GO.Location.Zip == "78705" | GO.Location.Zip == "78701"|GO.Location.Zip == "78704") %>% ggplot() +
geom_histogram(aes(x= GO.Location.Zip, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Crime Status Reltates to GO District", x="Location Zip", y="Count", fill="Type of Crime")
print(p)
d = c(78712,78705,78701,78702,78703)
p <- dplyr::filter(df, GO.Location.Zip == "78712" | GO.Location.Zip == "78705" | GO.Location.Zip == "78701"|GO.Location.Zip == "78702"|GO.Location.Zip == "78703") %>% ggplot() +
geom_histogram(aes(x= d, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Crime Status Reltates to GO District", x="Location Zip", y="Count", fill="Type of Crime")
print(p)
d = c(1)
p <- dplyr::filter(df, GO.Location.Zip == "78712" | GO.Location.Zip == "78705" | GO.Location.Zip == "78701"|GO.Location.Zip == "78702"|GO.Location.Zip == "78703") %>% ggplot() +
geom_histogram(aes(x= d, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Crime Status Reltates to GO District", x="Location Zip", y="Count", fill="Type of Crime")
print(p)
p <- dplyr::filter(df, GO.Location.Zip == "78702" | GO.Location.Zip == "78712" | GO.Location.Zip == "78705"|GO.Location.Zip == "78701" | GO.Location.Zip == "78703") %>% ggplot() +
geom_histogram(aes(x= GO.Location.Zip, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Crime Status Reltates to GO District", x="Location Zip", y="Count", fill="Type of Crime")
print(p)
p <- dplyr::filter(df, GO.Location.Zip == "78702" | GO.Location.Zip == "78712" | GO.Location.Zip == "78705"|GO.Location.Zip == "78701" | GO.Location.Zip == "78703") %>% ggplot() +
geom_histogram(aes(x= GO.Location.Zip, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Crime Status Reltates to GO District", x="Location Zip", y="Count", fill="Type of Crime") +
theme(axis.text.x=element_text(size=20, vjust=0.5)) +
theme(axis.text.y=element_text(size=20, hjust=0.5)) +
theme(axis.title=element_text(size=14, face="bold")) +
theme(plot.title = element_text(size=22)) +
theme(legend.title = element_text(size=20, face="bold"), legend.text = element_text(size=18))
print(p)
p <- dplyr::filter(df, GO.Location.Zip == "78702" | GO.Location.Zip == "78712" | GO.Location.Zip == "78705"|GO.Location.Zip == "78701" | GO.Location.Zip == "78703") %>% ggplot() +
geom_histogram(aes(x= GO.Location.Zip, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Crime Status Reltates to GO District", x="Location Zip", y="Count", fill="Type of Crime")
print(p)
p <- dplyr::filter(df, GO.Location.Zip == "78702" | GO.Location.Zip == "78712" | GO.Location.Zip == "78705"|GO.Location.Zip == "78701" | GO.Location.Zip == "78703") %>% ggplot() +
geom_histogram(aes(x= GO.District, fill = Highest.NIBRS.UCR.Offense.Description), stat = "count") +
labs(title= "Crime Status Reltates to GO District", x="Location Zip", y="Count", fill="Type of Crime")
print(p)
plot = tidyr::gather(df, variable, value, -x) %>% ggplot() + geom_point(aes(x=x, y=value, colour = variable, size=4)) + geom_line(aes(x=x, y=value, colour = variable))
plot = tidyr::gather(df, variable, value) %>% ggplot() + geom_point(aes(x=x, y=value, colour = variable, size=4)) + geom_line(aes(x=x, y=value, colour = variable))
print(plot)
plot = tidyr::gather(df, variable, value) %>% ggplot() + geom_point(aes(x=x, y=value, colour = variable, size=4)) + geom_line(aes(x=GO.District, y=value, colour = variable))
print(plot)
plot = tidyr::gather(df, variable, value) %>% ggplot() + geom_point(aes(x=GO.District, y=value, colour = variable, size=4)) + geom_line(aes(x=GO.District, y=value, colour = variable))
print(plot)
require("ggplot2")
require("dplyr")
require("grid")
require("RCurl")
require("jsonlite")
df1 <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5000/rest/native/?query="select * from Annual_Crime_Dataset_2015 limit 10000;"')),httpheader=c(DB='jdbc:data:world:sql:ronzhang724:austin-tx-annual-crime-2015', USER='achou', PASS="eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmFjaG91IiwiaXNzIjoiYWdlbnQ6YWNob3U6OjkyNDE2Y2MyLTgzNjYtNDk1My04NzE4LThkYWEyYjBiYTlhNCIsImlhdCI6MTQ4NDY5NzExNCwicm9sZSI6WyJ1c2VyX2FwaV93cml0ZSIsInVzZXJfYXBpX3JlYWQiXSwiZ2VuZXJhbC1wdXJwb3NlIjp0cnVlfQ.ljUul4DnoHEECf_HoYN1yc8lS-hmWSaHVS8F3UBLcsAFIJm6ZiheRjOy6iFQY63j_SHS1Nee_RodK4TppWrHAg", MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df
df2 <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5000/rest/native/?query="
SELECT Annual_Crime_Dataset_2015.`GO Highest Offense Desc`, Annual_Crime_Dataset_2015.`GO X Coordinate`,Annual_Crime_Dataset_2015.`GO Y Coordinate`, Annual_Crime_Dataset_2015.`GO District`, Annual_Crime_Dataset_2015.`Highest NIBRS/UCR Offense Description`, Annual_Crime_Dataset_2015.`Council District` FROM Annual_Crime_Dataset_2015 WHERE Annual_Crime_Dataset_2015.`GO X Coordinate` IS NOT NULL AND Annual_Crime_Dataset_2015.`GO Y Coordinate` IS NOT NULL ORDER BY Annual_Crime_Dataset_2015.`GO Highest Offense Desc`;"')),httpheader=c(DB='jdbc:data:world:sql:ronzhang724:s-17-edv-project-2', USER='achou', PASS="eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmFjaG91IiwiaXNzIjoiYWdlbnQ6YWNob3U6OjkyNDE2Y2MyLTgzNjYtNDk1My04NzE4LThkYWEyYjBiYTlhNCIsImlhdCI6MTQ4NDY5NzExNCwicm9sZSI6WyJ1c2VyX2FwaV93cml0ZSIsInVzZXJfYXBpX3JlYWQiXSwiZ2VuZXJhbC1wdXJwb3NlIjp0cnVlfQ.ljUul4DnoHEECf_HoYN1yc8lS-hmWSaHVS8F3UBLcsAFIJm6ZiheRjOy6iFQY63j_SHS1Nee_RodK4TppWrHAg", MODE=
df2 <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5000/rest/native/?query="
SELECT Annual_Crime_Dataset_2015.`GO Highest Offense Desc`, Annual_Crime_Dataset_2015.`GO X Coordinate`,Annual_Crime_Dataset_2015.`GO Y Coordinate`, Annual_Crime_Dataset_2015.`GO District`, Annual_Crime_Dataset_2015.`Highest NIBRS/UCR Offense Description`, Annual_Crime_Dataset_2015.`Council District` FROM Annual_Crime_Dataset_2015 WHERE Annual_Crime_Dataset_2015.`GO X Coordinate` IS NOT NULL AND Annual_Crime_Dataset_2015.`GO Y Coordinate` IS NOT NULL ORDER BY Annual_Crime_Dataset_2015.`GO Highest Offense Desc`;"')),httpheader=c(DB='jdbc:data:world:sql:ronzhang724:s-17-edv-project-2', USER='achou', PASS="eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmFjaG91IiwiaXNzIjoiYWdlbnQ6YWNob3U6OjkyNDE2Y2MyLTgzNjYtNDk1My04NzE4LThkYWEyYjBiYTlhNCIsImlhdCI6MTQ4NDY5NzExNCwicm9sZSI6WyJ1c2VyX2FwaV93cml0ZSIsInVzZXJfYXBpX3JlYWQiXSwiZ2VuZXJhbC1wdXJwb3NlIjp0cnVlfQ.ljUul4DnoHEECf_HoYN1yc8lS-hmWSaHVS8F3UBLcsAFIJm6ZiheRjOy6iFQY63j_SHS1Nee_RodK4TppWrHAg", MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
source('~/.active-rstudio-document')
query <- function(q) { return(data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",paste('localhost:5000/rest/native/?query="', q, '"'))),httpheader=c(DB='jdbc:data:world:sql:hyunsukong:s-17-edv-project-1', USER='ronzhang724', PASS='eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OnJvbnpoYW5nNzI0IiwiaXNzIjoiYWdlbnQ6cm9uemhhbmc3MjQ6OmI2Y2Q0YjRjLTM3NzMtNGJjNi1iNjQzLTVhNWEzZTI4OTRkZiIsImlhdCI6MTQ4NDg2NzkxMywicm9sZSI6WyJ1c2VyX2FwaV93cml0ZSIsInVzZXJfYXBpX3JlYWQiXSwiZ2VuZXJhbC1wdXJwb3NlIjp0cnVlfQ.eX4Uue-zuOZtQ97D_yGSwUIMwlRc4gD7uwr-Vvmw-0bhZqxY4ztKEtFGM6UuxZ5gmEBPqCxbbSUKOuP91EIQ_w', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))) }
dataset <- query("select * from Annual_Crime_Dataset_2015 limit 10000;")
query <- function(q) { return(data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",paste('localhost:5011/rest/native/?query="', q, '"'))),httpheader=c(DB='jdbc:data:world:sql:hyunsukong:s-17-edv-project-1', USER='ronzhang724', PASS='eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OnJvbnpoYW5nNzI0IiwiaXNzIjoiYWdlbnQ6cm9uemhhbmc3MjQ6OmI2Y2Q0YjRjLTM3NzMtNGJjNi1iNjQzLTVhNWEzZTI4OTRkZiIsImlhdCI6MTQ4NDg2NzkxMywicm9sZSI6WyJ1c2VyX2FwaV93cml0ZSIsInVzZXJfYXBpX3JlYWQiXSwiZ2VuZXJhbC1wdXJwb3NlIjp0cnVlfQ.eX4Uue-zuOZtQ97D_yGSwUIMwlRc4gD7uwr-Vvmw-0bhZqxY4ztKEtFGM6UuxZ5gmEBPqCxbbSUKOuP91EIQ_w', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))) }
dataset <- query("select * from Annual_Crime_Dataset_2015 limit 10000;")
query <- function(q) { return(data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",paste('localhost:5011/rest/native/?query="', q, '"'))),httpheader=c(DB='jdbc:data:world:sql:ronzhang724/s-17-edv-project-2', USER='ronzhang724', PASS='eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OnJvbnpoYW5nNzI0IiwiaXNzIjoiYWdlbnQ6cm9uemhhbmc3MjQ6OmI2Y2Q0YjRjLTM3NzMtNGJjNi1iNjQzLTVhNWEzZTI4OTRkZiIsImlhdCI6MTQ4NDg2NzkxMywicm9sZSI6WyJ1c2VyX2FwaV93cml0ZSIsInVzZXJfYXBpX3JlYWQiXSwiZ2VuZXJhbC1wdXJwb3NlIjp0cnVlfQ.eX4Uue-zuOZtQ97D_yGSwUIMwlRc4gD7uwr-Vvmw-0bhZqxY4ztKEtFGM6UuxZ5gmEBPqCxbbSUKOuP91EIQ_w', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))) }
dataset <- query("select * from Annual_Crime_Dataset_2015 limit 10000;")
head(dataset)
source('~/.active-rstudio-document')
query <- function(q) { return(data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",paste('localhost:5011/rest/native/?query="', q, '"'))),httpheader=c(DB='jdbc:data:world:sql:ronzhang724/s-17-edv-project-2', USER='ronzhang724', PASS='eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OnJvbnpoYW5nNzI0IiwiaXNzIjoiYWdlbnQ6cm9uemhhbmc3MjQ6OmI2Y2Q0YjRjLTM3NzMtNGJjNi1iNjQzLTVhNWEzZTI4OTRkZiIsImlhdCI6MTQ4NDg2NzkxMywicm9sZSI6WyJ1c2VyX2FwaV93cml0ZSIsInVzZXJfYXBpX3JlYWQiXSwiZ2VuZXJhbC1wdXJwb3NlIjp0cnVlfQ.eX4Uue-zuOZtQ97D_yGSwUIMwlRc4gD7uwr-Vvmw-0bhZqxY4ztKEtFGM6UuxZ5gmEBPqCxbbSUKOuP91EIQ_w', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))) }
dataset <- query("select * from Annual_Crime_Dataset_2015 limit 10000;")
head(dataset)
sessionInfo(package = NULL)
source("../00 Doc/dataset_summary.R")
source("../00 Doc/workingfile_csv.R")
sessionInfo(package = NULL)
source("../00 Doc/dataset_summary.R")
source("../03 Visualizations/workingfile_csv.R")
require(tidyr)
require(dplyr)
require(ggplot2)
tbl_df(diamonds)
View(diamonds)
dplyr::select(diamonds, cut, clarity) %>% tbl_df # Equivalent SQL: select cut, clarity from diamonds;
diamonds %>% dplyr::select(cut, clarity) %>% tbl_df
diamonds %>% dplyr::select(., cut, clarity) %>% tbl_df # . means diamonds
diamonds %>% dplyr::select(color:price) %>% tbl_df # All the column between color and price
diamonds %>% dplyr::select(-cut, -clarity) %>% tbl_df # Equivalent SQL: none
x <- diamonds %>% dplyr::select(cut, clarity) %>% tbl_df
x
diamonds %>% dplyr::select(cut, clarity) %>% dplyr::filter(cut == "Good") %>% tbl_df # Equivalent SQL: select cut, clarity from diamonds where cut = 'Good';
diamonds %>% dplyr::select(cut, clarity) %>% dplyr::filter(cut %in% c("Good", "Fair")) %>% tbl_df # Equivalent SQL: select cut, clarity from diamonds where cut in ('Good', 'Fair');# or Equivalent SQL:  select cut, clarity from diamonds where cut = 'Good' or cut = 'Fair';
diamonds %>% dplyr::select(cut, clarity) %>% dplyr::filter(carat > 2) %>% tbl_df
data.frame(x=c(1,1,1,2,2), y=c(5:1), z=(1:5)) %>% dplyr::arrange(desc(x)) %>% tbl_df
data.frame(x=c(1,1,1,2,2), y=c(5:1), z=(1:5)) %>% dplyr::arrange(desc(x), y) %>% tbl_df
diamonds %>% dplyr::arrange(carat) %>% tbl_df # Equivalent SQL: select * from diamonds order by carat;
diamonds %>% dplyr::arrange(desc(carat)) %>% tbl_df # Equivalent SQL:select * from diamonds order by carat desc;
diamonds %>% dplyr::rename(tbl= table) %>% tbl_df # Equivalent: select tbl as "table" from diamonds;
df
tbl_df
diamonds %>% dplyr::select(cut, clarity, x, y, z) %>% dplyr::filter(cut %in% c("Good", "Fair"), clarity == "VS1" | is.na(cut)) %>% dplyr::mutate(sum = x+y+z) %>% tbl_df # Equivalent: select cut, clarity, x, y, z, x+y+z as sum from diamonds where ((cut = 'Good' or cut = 'Fair') and clarity = 'VS1') or cut is null
pmin(1:5, 5:1) # Pairwise min
diamonds %>% dplyr::mutate(minxy = pmin(x,y)) %>% tbl_df
diamonds %>% dplyr::mutate(cummin_x = cummin(x)) %>% tbl_df
c(1,1,2,0,4,3,5) %>% cummin()
diamonds %>% dplyr::mutate(cummin_x = cummin(x)) %>% tbl_df
c(1,1,2,5,4,3,5) %>% cummax()
c(1,1,2,3,4,3,5) %>% cumsum()
diamonds %>% dplyr::arrange(x) %>% dplyr::mutate(cumsum_x = cumsum(x)) %>% ggplot(aes(x = x, y = cumsum_x)) + geom_point()
c(1,1,2,3,4,3,5) %>% cumprod()
c(1,1,2,3,4,3,5) %>% between(2,4)
c(1:5) %>% cummean()
c(1:5) %>% lead()
c(1:5) %>% lead(2)
c(1:5) %>% lead() - c(1:5)  # take next and subtract with 12345
diamonds %>% dplyr::mutate(lead_z = lead(z)-z) %>% tbl_df
diamonds %>% dplyr::mutate(lead_z = lead(z)-z) %>% tbl_df
c(1:5) %>% lag()
diamonds %>% dplyr::mutate(lag_z = z-lag(z)) %>% tbl_df
c(1:10)
c(1:10) %>% ntile(4) # bucket edges are rounded
diamonds %>% dplyr::mutate(ntile_z = ntile(z,100)) %>% dplyr::arrange(desc(ntile_z)) %>% tbl_df
c(1:10)
c(1:10) %>% ntile(4) # bucket edges are rounded
diamonds %>% dplyr::mutate(ntile_z = ntile(z,100)) %>% dplyr::arrange(desc(ntile_z)) %>% tbl_df
diamonds %>% dplyr::mutate(ntile_z = ntile(z,100)) %>% group_by(ntile_z) %>% dplyr::summarise(n=n()) %>% tbl_df
c(1:10) %>% ntile(4) # bucket edges are rounded
c(1:10)
c(1:10) %>% ntile(4) # bucket edges are rounded
c(1,1,2,5,4,3,5) %>% cume_dist()
dd <- dplyr::sample_n(diamonds, 100) %>% dplyr::mutate(price_percent = cume_dist(price)) %>% dplyr::arrange(desc(price_percent)) %>% tbl_df # Equivalent SQL:
c(1:12) %>% ntile(4) # bucket edges are rounded
dd
view(dd)
View('dd')
View(dd)
c(1,1:5) %>% cume_dist()
c(1:5) %>% cume_dist()
bottom20_diamonds <- diamonds %>% dplyr::mutate(price_percent = cume_dist(price)) %>% dplyr::filter(price_percent <= .20) %>% dplyr::arrange(desc(price_percent)) %>% tbl_df
view(bottom20_diamonds)
View(bottom20_diamonds)
ds <- diamonds %>% summarize(max_price = max(price)) # Equivalent SQL select max(price) as max_price from diamonds;
ds
d <- diamonds %>% group_by(cut) %>% dplyr::summarise(n = n()) %>% dplyr::arrange(n) %>% View # Equivalent SQL: select cut, color, count(*) n from diamonds group by cut, color order by n;
d <- diamonds %>% group_by(cut) %>% dplyr::summarise(n = n()) %>% dplyr::arrange(n) %>% tbl_df # Equivalent SQL: select cut, color, count(*) n from diamonds group by cut, color order by n;
d <- diamonds %>% group_by(cut) %>% dplyr::summarise(n = n()) %>% dplyr::arrange(n) %>% tbl_df # Equivalent SQL: select cut, color, count(*) n from diamonds group by cut, color order by n;
diamonds %>% group_by(cut) %>% dplyr::summarise(n = n()) %>% dplyr::arrange(n) %>% tbl_df # Equivalent SQL: select cut, color, count(*) n from diamonds group by cut, color order by n;
diamonds %>% group_by(cut,color) %>% dplyr::summarise(mean = mean(x), sum = sum(x,y,z), n = n()) %>% View
View(df)
View(diamonds)
diamonds %>% group_by(cut,color) %>% dplyr::summarise(mean = mean(x), sum = sum(x,y,z), n = n()) %>% View
library(shiny); runApp('DataVisualization/DrCannata1/07 Shiny/01 Shiny Video Part 2/code/01-two-inputs.R')
runApp('DataVisualization/DrCannata1/07 Shiny/01 Shiny Video Part 2/code/01-two-inputs.R')
runApp('DataVisualization/DrCannata1/07 Shiny/01 Shiny Video Part 2/code/01-two-inputs.R')
runApp('DataVisualization/DrCannata1/07 Shiny/01 Shiny Video Part 2/code/02-two-outputs.R')
runApp('DataVisualization/DrCannata1/07 Shiny/01 Shiny Video Part 2/code/03-reactive.R')
runApp('DataVisualization/DrCannata1/07 Shiny/01 Shiny Video Part 2/code/03-reactive.R')
runApp('DataVisualization/DrCannata1/07 Shiny/01 Shiny Video Part 2/code/03-reactive.R')
# 03-reactive
library(shiny)
ui <- fluidPage(
sliderInput(inputId = "E_NUM",
label = "Choose a number",
value = 25, min = 1, max = 100),
plotOutput("O_HIST"),
verbatimTextOutput("O_STATS")
)
server <- function(input, output) {
data <- reactive({  # create a normal distribution called 'data' for later use
rnorm(input$E_NUM)
})
print(class(data))  # datatype of 'data' is function, therefore, need to wirte 'data()'
output$O_HIST <- renderPlot({
hist(data()) # You need to do data() and not data
})
output$O_STATS <- renderPrint({
summary(data()) # You need to do data() and not data
})
}
shinyApp(ui = ui, server = server)
runApp('DataVisualization/DrCannata1/07 Shiny/01 Shiny Video Part 2/code/03-reactive.R')
runApp('DataVisualization/DrCannata1/07 Shiny/01 Shiny Video Part 2/code/03-reactive.R')
runApp('DataVisualization/DrCannata1/07 Shiny/01 Shiny Video Part 2/code/04-isolate.R')
runApp('DataVisualization/DrCannata1/07 Shiny/01 Shiny Video Part 2/code/04-isolate.R')
runApp('DataVisualization/DrCannata1/07 Shiny/01 Shiny Video Part 2/code/02-two-outputs.R')
runApp('DataVisualization/DrCannata1/07 Shiny/01 Shiny Video Part 2/code/01-two-inputs.R')
runApp('DataVisualization/DrCannata1/07 Shiny/01 Shiny Video Part 2/code/04-isolate.R')
runApp('DataVisualization/DrCannata1/07 Shiny/01 Shiny Video Part 2/code/04-isolate.R')
runApp('DataVisualization/DrCannata1/07 Shiny/01 Shiny Video Part 2/code/04-isolate.R')
runApp('DataVisualization/DrCannata1/07 Shiny/01 Shiny Video Part 2/code/04-isolate.R')
runApp('DataVisualization/DrCannata1/07 Shiny/01 Shiny Video Part 2/code/04-isolate.R')
runApp('DataVisualization/DrCannata1/07 Shiny/01 Shiny Video Part 2/code/04-isolate.R')
runApp('DataVisualization/DrCannata1/07 Shiny/01 Shiny Video Part 2/code/05-actionButton.R')
runApp('DataVisualization/DrCannata1/07 Shiny/01 Shiny Video Part 2/code/07-eventReactive.R')
runApp('DataVisualization/DrCannata1/07 Shiny/01 Shiny Video Part 2/code/06-observeEvent.R')
runApp('DataVisualization/DrCannata1/07 Shiny/01 Shiny Video Part 2/code/06-observeEvent.R')
runApp('DataVisualization/DrCannata1/07 Shiny/01 Shiny Video Part 2/code/07-eventReactive.R')
runApp('DataVisualization/DrCannata1/07 Shiny/01 Shiny Video Part 2/code/07-eventReactive.R')
runApp('DataVisualization/DrCannata1/07 Shiny/01 Shiny Video Part 2/code/06-observeEvent.R')
runApp('DataVisualization/DrCannata1/07 Shiny/01 Shiny Video Part 2/code/07-eventReactive.R')
runApp('DataVisualization/DrCannata1/07 Shiny/01 Shiny Video Part 2/code/07-eventReactive.R')
data.class(c(1,2,3))
data.type(c(1,2,3))
typeof(c(1,2,3))
runApp('DataVisualization/DrCannata1/07 Shiny/01 Shiny Video Part 2/code/08-reactiveValues.R')
runApp('DataVisualization/DrCannata1/07 Shiny/01 Shiny Video Part 2/code/03-reactive.R')
runApp('DataVisualization/DrCannata1/07 Shiny/01 Shiny Video Part 2/code/07-eventReactive.R')
require(tidyr)
require(dplyr)
require(ggplot2)
tbl_df(diamonds)
View(diamonds)
dplyr::select(diamonds, cut, clarity) %>% tbl_df # Equivalent SQL: select cut, clarity from diamonds;
c(1,1,2,3,4,3,5) %>% between(2,4) # if each element is in between range 2 to 4
diamonds %>% dplyr::mutate(between_x = between(x,4,4.1)) %>% tbl_df
c(1:5) %>% lead()           # take the value in the next row
c(1:12) %>% ntile(4) # bucket edges are rounded
c(1:12) %>% ntile(2) # bucket edges are rounded
c(1:12) %>% ntile(5) # bucket edges are rounded
c(1:13) %>% ntile(5) # bucket edges are rounded
diamonds %>% dplyr::mutate(ntile_z = ntile(z,100)) %>% dplyr::arrange(desc(ntile_z)) %>% tbl_df
df1 <- diamonds %>% dplyr::mutate(ntile_z = ntile(z,100)) %>% dplyr::arrange(desc(ntile_z)) %>% tbl_df
df1
View(df1)
c(1,1,2,5,4,3,5) %>% cume_dist()
diamonds %>% group_by(cut) %>% dplyr::summarise(n = n()) %>% dplyr::arrange(n) %>% tbl_df # Equivalent SQL: select cut, color, count(*) n from diamonds group by cut, color order by n;
ds <- diamonds %>% summarize(max_price = max(price)) # Equivalent SQL select max(price) as max_price from diamonds;
View(ds)
diamonds %>% summarize(mean = mean(x), sum = sum(x,y,z), n = n()) %>% tbl_df()# Equivalent SQL: select avg(x) as avg, sum(x)+sum(y)+sum(z) as sum, count(*) as n from diamonds;
library(shiny); runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/02-tags.R')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/02-tags.R')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/02-tags.R')
View(tags)
Names(tags)
names(tGA)
names(tags)
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/02-tags.R')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/02-tags.R')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/03-layout.R')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/03-layout.R')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/03-layout.R')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/03-layout.R')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/03-layout.R')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/03-layout.R')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/03-layout.R')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/03-layout.R')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/03-layout.R')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/03-layout.R')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/03-layout.R')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/03-layout.R')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/03-layout.R')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/03-layout.R')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/03-layout.R')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/03-layout.R')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/03-layout.R')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/04-well.R')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/04-well.R')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/04-well.R')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/05-tabs.R')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/05-tabs.R')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/06-navlist.R')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/06-navlist.R')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/07-sidebar.R')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/08-navbarPage.R')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/08-navbarPage.R')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/08-navbarPage.R')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/02-tags.R')
runApp('DataVisualization/DrCannata1/07 Shiny/06 Dashboard')
runApp('DataVisualization/DrCannata1/07 Shiny/06 Dashboard')
install.packages("shinydashboard")
runApp('DataVisualization/DrCannata1/07 Shiny/06 Dashboard')
install.packages("leaflet")
runApp('DataVisualization/DrCannata1/07 Shiny/06 Dashboard')
runApp('DataVisualization/DrCannata1/07 Shiny/06 Dashboard')
runApp('DataVisualization/DrCannata1/07 Shiny/06 Dashboard')
runApp('DataVisualization/DrCannata1/07 Shiny/06 Dashboard')
runApp('DataVisualization/DrCannata1/07 Shiny/02 Shiny Video Part 3/code/08-navbarPage.R')
require(readr)
require(plyr)
file_path = "../../../CSVs/diamonds.csv"
diamonds <- readr::read_csv(file_path)
str(df)
sessionInfo(package=NULL)
shiny::runApp('DataVisualization/DrCannata1/09 Crosstabs')
runApp('DataVisualization/DrCannata1/09 Crosstabs')
runApp('DataVisualization/DrCannata1/09 Crosstabs')
runApp('DataVisualization/DrCannata1/09 Crosstabs')
runApp('DataVisualization/DrCannata1/09 Crosstabs')
runApp('DataVisualization/DrCannata1/09 Crosstabs')
runApp('DataVisualization/DrCannata1/09 Crosstabs')
runApp('DataVisualization/DrCannata1/09 Crosstabs')
runApp('DataVisualization/DrCannata1/09 Crosstabs')
runApp('DataVisualization/DrCannata1/09 Crosstabs')
runApp('DataVisualization/DrCannata1/09 Crosstabs')
runApp('DataVisualization/DrCannata1/09 Crosstabs')
runApp('DataVisualization/DrCannata1/09 Crosstabs')
runApp('DataVisualization/DrCannata1/09 Crosstabs')
runApp('DataVisualization/DrCannata1/09 Crosstabs')
runApp('DataVisualization/DrCannata1/09 Crosstabs')
runApp('DataVisualization/DrCannata1/09 Crosstabs')
shiny::runApp('Desktop/cs329ejuliannestephen-dv_finalproject_julianne_crea-d235a9872ba9/03Shiny')
runApp('Desktop/cs329ejuliannestephen-dv_finalproject_julianne_crea-d235a9872ba9/03Shiny')
shiny::runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
shiny::runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
runApp('s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny')
setwd("~/s17dvproject6-dvproject-4-chou-zeng-zhang-zhang/02 Shiny")
shiny::runApp()
runApp()
runApp()
